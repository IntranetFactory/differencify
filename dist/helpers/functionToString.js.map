{"version":3,"sources":["../../src/helpers/functionToString.js"],"names":["functionToString","func","args","check","function","funcArguments","forEach","value","string","push","functionSource","toString","join"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,mBAAmB,CAACC,IAAD,EAAO,GAAGC,IAAV,KAAmB;AAC1C,MAAI,CAACC,qBAAMC,QAAN,CAAeH,IAAf,CAAL,EAA2B;AACzB,WAAO,IAAP;AACD;AACD,QAAMI,gBAAgB,EAAtB;AACAH,OAAKI,OAAL,CAAcC,KAAD,IAAW;AACtB,QAAIJ,qBAAMK,MAAN,CAAaD,KAAb,CAAJ,EAAyB;AACvBF,oBAAcI,IAAd,CAAoB,IAAGF,KAAM,GAA7B;AACD,KAFD,MAEO;AACLF,oBAAcI,IAAd,CAAmBF,KAAnB;AACD;AACF,GAND;AAOA,QAAMG,iBAAiBT,KAAKU,QAAL,EAAvB;AACA,SAAQ,IAAGD,cAAe,KAAIL,cAAcO,IAAd,EAAqB,GAAnD;AACD,CAdD;;kBAgBeZ,gB","file":"functionToString.js","sourcesContent":["import check from 'check-types';\r\n\r\nconst functionToString = (func, ...args) => {\r\n  if (!check.function(func)) {\r\n    return null;\r\n  }\r\n  const funcArguments = [];\r\n  args.forEach((value) => {\r\n    if (check.string(value)) {\r\n      funcArguments.push(`\"${value}\"`);\r\n    } else {\r\n      funcArguments.push(value);\r\n    }\r\n  });\r\n  const functionSource = func.toString();\r\n  return `(${functionSource})(${funcArguments.join()})`;\r\n};\r\n\r\nexport default functionToString;\r\n"]}