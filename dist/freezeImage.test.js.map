{"version":3,"sources":["../src/freezeImage.test.js"],"names":["replaceChild","jest","fn","document","querySelector","tagName","parentNode","drawImage","getContext","createElement","className","describe","beforeEach","mockClear","it","result","expect","toEqual","toHaveBeenCalledWith","toHaveBeenCalledTimes","mockReturnValueOnce"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,eAAeC,KAAKC,EAAL,EAArB;AACAC,SAASC,aAAT,GAAyBH,KAAKC,EAAL,CAAQ,OAAO;AACtCG,WAAS,KAD6B;AAEtCC,cAAY;AACVN;AADU;AAF0B,CAAP,CAAR,CAAzB;;AAOA,MAAMO,YAAYN,KAAKC,EAAL,EAAlB;AACA,MAAMM,aAAaP,KAAKC,EAAL,CAAQ,OAAO;AAChCK;AADgC,CAAP,CAAR,CAAnB;AAGAJ,SAASM,aAAT,GAAyBR,KAAKC,EAAL,CAAQ,OAAO;AACtCQ,aAAW,OAD2B;AAEtCF;AAFsC,CAAP,CAAR,CAAzB;;AAKAG,SAAS,cAAT,EAAyB,MAAM;AAC7BC,aAAW,MAAM;AACfT,aAASC,aAAT,CAAuBS,SAAvB;AACAV,aAASM,aAAT,CAAuBI,SAAvB;AACAN,cAAUM,SAAV;AACAb,iBAAaa,SAAb;AACD,GALD;;AAOAC,KAAG,mCAAH,EAAwC,MAAM;AAC5C,UAAMC,SAAS,2BAAY,UAAZ,CAAf;AACAC,WAAOD,MAAP,EAAeE,OAAf,CAAuB,IAAvB;AACAD,WAAOb,SAASC,aAAhB,EAA+Bc,oBAA/B,CAAoD,UAApD;AACAF,WAAOb,SAASM,aAAhB,EAA+BS,oBAA/B,CAAoD,QAApD;AACAF,WAAOR,UAAP,EAAmBU,oBAAnB,CAAwC,IAAxC;AACAF,WAAOT,SAAP,EAAkBY,qBAAlB,CAAwC,CAAxC;AACAH,WAAOhB,YAAP,EAAqBmB,qBAArB,CAA2C,CAA3C;AACD,GARD;;AAUAL,KAAG,iCAAH,EAAsC,MAAM;AAC1CX,aAASC,aAAT,CAAuBgB,mBAAvB,CAA2C,EAAEf,SAAS,KAAX,EAA3C;AACA,UAAMU,SAAS,2BAAY,UAAZ,CAAf;AACAC,WAAOD,MAAP,EAAeE,OAAf,CAAuB,KAAvB;AACD,GAJD;AAKD,CAvBD","file":"freezeImage.test.js","sourcesContent":["import freezeImage from './freezeImage';\r\n\r\nconst replaceChild = jest.fn();\r\ndocument.querySelector = jest.fn(() => ({\r\n  tagName: 'IMG',\r\n  parentNode: {\r\n    replaceChild,\r\n  },\r\n}));\r\n\r\nconst drawImage = jest.fn();\r\nconst getContext = jest.fn(() => ({\r\n  drawImage,\r\n}));\r\ndocument.createElement = jest.fn(() => ({\r\n  className: 'class',\r\n  getContext,\r\n}));\r\n\r\ndescribe('Freeze Image', () => {\r\n  beforeEach(() => {\r\n    document.querySelector.mockClear();\r\n    document.createElement.mockClear();\r\n    drawImage.mockClear();\r\n    replaceChild.mockClear();\r\n  });\r\n\r\n  it('calls document with correct value', () => {\r\n    const result = freezeImage('selector');\r\n    expect(result).toEqual(true);\r\n    expect(document.querySelector).toHaveBeenCalledWith('selector');\r\n    expect(document.createElement).toHaveBeenCalledWith('canvas');\r\n    expect(getContext).toHaveBeenCalledWith('2d');\r\n    expect(drawImage).toHaveBeenCalledTimes(1);\r\n    expect(replaceChild).toHaveBeenCalledTimes(1);\r\n  });\r\n\r\n  it('returns false with non IMG tags', () => {\r\n    document.querySelector.mockReturnValueOnce({ tagName: 'DIV' });\r\n    const result = freezeImage('selector');\r\n    expect(result).toEqual(false);\r\n  });\r\n});\r\n"]}